// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// run_base_model
Rcpp::List run_base_model(const Rcpp::List data, const std::string model_variant, const int time_steps, const int hiv_steps, const std::vector<int> save_steps, const bool is_midyear_projection, const int t_ART_start);
RcppExport SEXP _frogger_run_base_model(SEXP dataSEXP, SEXP model_variantSEXP, SEXP time_stepsSEXP, SEXP hiv_stepsSEXP, SEXP save_stepsSEXP, SEXP is_midyear_projectionSEXP, SEXP t_ART_startSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const std::string >::type model_variant(model_variantSEXP);
    Rcpp::traits::input_parameter< const int >::type time_steps(time_stepsSEXP);
    Rcpp::traits::input_parameter< const int >::type hiv_steps(hiv_stepsSEXP);
    Rcpp::traits::input_parameter< const std::vector<int> >::type save_steps(save_stepsSEXP);
    Rcpp::traits::input_parameter< const bool >::type is_midyear_projection(is_midyear_projectionSEXP);
    Rcpp::traits::input_parameter< const int >::type t_ART_start(t_ART_startSEXP);
    rcpp_result_gen = Rcpp::wrap(run_base_model(data, model_variant, time_steps, hiv_steps, save_steps, is_midyear_projection, t_ART_start));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_frogger_run_base_model", (DL_FUNC) &_frogger_run_base_model, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_frogger(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
