// Generated by leapfrog cpp_generation: do not edit by hand
// This file is automatically generated. Do not edit this file. If you want to make changes
// edit leapfrog json files in `cpp_generation/modelSchemas` and run `uv run ./src/main.py` inside
// the `cpp_generation` folder.

#include <filesystem>

#include "H5Cpp.h"
#include "../config_mixer.hpp"
#include "array/array.h"


template <size_t TIndex, typename... Dims>
requires(TIndex >= sizeof...(Dims))
void copy_dim_to_dims_array(hsize_t* array, const std::tuple<Dims...>& tuple) {};

template <size_t TIndex, typename... Dims>
requires(TIndex >= 0 && TIndex < sizeof...(Dims))
void copy_dim_to_dims_array(hsize_t* array, const std::tuple<Dims...>& tuple) {
  *(array + TIndex) = std::get<sizeof...(Dims) - TIndex - 1>(tuple).extent();
  copy_dim_to_dims_array<TIndex + 1>(array, tuple);
};

template <typename T, typename Shape>
void write_data(
  const std::filesystem::path &output_file,
  const std::string_view key,
  nda::array<T, Shape> array
) {
  const H5std_string FILE_NAME(output_file);
  H5::H5File file(FILE_NAME, H5F_ACC_RDWR);

  const H5std_string DATASET_NAME(key);

  auto h5_type = H5::PredType::NATIVE_DOUBLE;
  if (std::is_same_v<T, int>) {
    h5_type = H5::PredType::NATIVE_INT;
  }

  constexpr hsize_t Rank = std::tuple_size_v<typename Shape::dims_type>;
  hsize_t dims[Rank];
  copy_dim_to_dims_array<0>(dims, array.shape().dims());
  H5::DataSpace dataspace(Rank, dims);

  H5::DataSet dataset = file.createDataSet(DATASET_NAME, h5_type, dataspace);
  dataset.write(array.data(), h5_type);

  dataset.close();
  file.close();
};

template <typename T>
T read_data_scalar(
  const std::filesystem::path &params_file,
  const std::string_view key
) {
  const H5std_string FILE_NAME(params_file);
  H5::H5File file(FILE_NAME, H5F_ACC_RDONLY);

  const H5std_string DATASET_NAME(key);
  H5::DataSet dataset = file.openDataSet(DATASET_NAME);

  std::vector<T> vec;
  vec.resize(1);

  auto h5_type = H5::PredType::NATIVE_DOUBLE;
  if (std::is_same_v<T, int>) {
    h5_type = H5::PredType::NATIVE_INT;
  }
  dataset.read(vec.data(), h5_type);

  dataset.close();
  file.close();

  return vec[0];
}

template <typename T, typename Shape>
nda::array<T, Shape> read_data(
  const std::filesystem::path &params_file,
  const std::string_view key,
  Shape shape
) {
  const H5std_string FILE_NAME(params_file);
  H5::H5File file(FILE_NAME, H5F_ACC_RDONLY);

  const H5std_string DATASET_NAME(key);
  H5::DataSet dataset = file.openDataSet(DATASET_NAME);

  // get size of flat array
  H5::DataSpace dataspace = dataset.getSpace();
  int n_dim = dataspace.getSimpleExtentNdims();
  std::vector<hsize_t> dims;
  dims.resize(n_dim);
  dataspace.getSimpleExtentDims(dims.data());
  hsize_t prod = 1;
  for (const auto& d: dims) {
    prod *= d;
  }

  std::vector<T> vec;
  vec.resize(prod);

  auto h5_type = H5::PredType::NATIVE_DOUBLE;
  if (std::is_same_v<T, int>) {
    h5_type = H5::PredType::NATIVE_INT;
  }
  dataset.read(vec.data(), h5_type);

  nda::array<T, Shape> ret(shape);
  T* ret_data = ret.data();
  for (int i = 0; i < shape.flat_max() + 1; i++) {
    *(ret_data + i) = vec[i];
  }

  dataset.close();
  file.close();

  return ret;
};

namespace leapfrog {
namespace internal {

template<typename real_type, MV ModelVariant>
struct DpOwnedPars {
  using SS = SSMixed<ModelVariant>;
  
  struct Pars {
    using shape_base_pop = nda::shape<
    nda::dim<0, SS::pAG, 1>,
    nda::dim<0, SS::NS, (SS::pAG)>
  >;
  nda::array<real_type, shape_base_pop> base_pop;

    using shape_survival_probability = nda::shape<
    nda::dim<0, SS::pAG + 1, 1>,
    nda::dim<0, SS::NS, (SS::pAG + 1)>,
    nda::dim<0, nda::dynamic, (SS::pAG + 1) * (SS::NS)>
  >;
  nda::array<real_type, shape_survival_probability> survival_probability;

    using shape_net_migration = nda::shape<
    nda::dim<0, SS::pAG, 1>,
    nda::dim<0, SS::NS, (SS::pAG)>,
    nda::dim<0, nda::dynamic, (SS::pAG) * (SS::NS)>
  >;
  nda::array<real_type, shape_net_migration> net_migration;

    using shape_age_specific_fertility_rate = nda::shape<
    nda::dim<0, SS::p_fertility_age_groups, 1>,
    nda::dim<0, nda::dynamic, (SS::p_fertility_age_groups)>
  >;
  nda::array<real_type, shape_age_specific_fertility_rate> age_specific_fertility_rate;

    using shape_births_sex_prop = nda::shape<
    nda::dim<0, SS::NS, 1>,
    nda::dim<0, nda::dynamic, (SS::NS)>
  >;
  nda::array<real_type, shape_births_sex_prop> births_sex_prop;

  };

  static Pars parse_pars(
    const std::filesystem::path &params_file,
    const Options<real_type> &opts
  ) {
    return {
      .base_pop = read_data<real_type, typename Pars::shape_base_pop>(params_file, "basepop", { nda::dim<>(0, SS::pAG, 1), nda::dim<>(0, SS::NS, (SS::pAG)) }),
      .survival_probability = read_data<real_type, typename Pars::shape_survival_probability>(params_file, "Sx", { nda::dim<>(0, SS::pAG + 1, 1), nda::dim<>(0, SS::NS, (SS::pAG + 1)), nda::dim<>(0, opts.proj_steps, (SS::pAG + 1) * (SS::NS)) }),
      .net_migration = read_data<real_type, typename Pars::shape_net_migration>(params_file, "netmigr_adj", { nda::dim<>(0, SS::pAG, 1), nda::dim<>(0, SS::NS, (SS::pAG)), nda::dim<>(0, opts.proj_steps, (SS::pAG) * (SS::NS)) }),
      .age_specific_fertility_rate = read_data<real_type, typename Pars::shape_age_specific_fertility_rate>(params_file, "asfr", { nda::dim<>(0, SS::p_fertility_age_groups, 1), nda::dim<>(0, opts.proj_steps, (SS::p_fertility_age_groups)) }),
      .births_sex_prop = read_data<real_type, typename Pars::shape_births_sex_prop>(params_file, "births_sex_prop", { nda::dim<>(0, SS::NS, 1), nda::dim<>(0, opts.proj_steps, (SS::NS)) })
    };
  };
};

template<typename real_type, MV ModelVariant>
struct HaOwnedPars {
  using SS = SSMixed<ModelVariant>;
  
  struct Pars {
    using shape_total_rate = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<real_type, shape_total_rate> total_rate;

    using shape_relative_risk_age = nda::shape<
    nda::dim<0, SS::pAG - SS::p_idx_hiv_first_adult, 1>,
    nda::dim<0, SS::NS, (SS::pAG - SS::p_idx_hiv_first_adult)>,
    nda::dim<0, nda::dynamic, (SS::pAG - SS::p_idx_hiv_first_adult) * (SS::NS)>
  >;
  nda::array<real_type, shape_relative_risk_age> relative_risk_age;

    using shape_relative_risk_sex = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<real_type, shape_relative_risk_sex> relative_risk_sex;

    using shape_cd4_mortality = nda::shape<
    nda::dim<0, SS::hDS, 1>,
    nda::dim<0, SS::hAG, (SS::hDS)>,
    nda::dim<0, SS::NS, (SS::hDS) * (SS::hAG)>
  >;
  nda::array<real_type, shape_cd4_mortality> cd4_mortality;

    using shape_cd4_progression = nda::shape<
    nda::dim<0, SS::hDS - 1, 1>,
    nda::dim<0, SS::hAG, (SS::hDS - 1)>,
    nda::dim<0, SS::NS, (SS::hDS - 1) * (SS::hAG)>
  >;
  nda::array<real_type, shape_cd4_progression> cd4_progression;

    using shape_cd4_initial_distribution = nda::shape<
    nda::dim<0, SS::hDS, 1>,
    nda::dim<0, SS::hAG, (SS::hDS)>,
    nda::dim<0, SS::NS, (SS::hDS) * (SS::hAG)>
  >;
  nda::array<real_type, shape_cd4_initial_distribution> cd4_initial_distribution;

    int scale_cd4_mortality;

    using shape_idx_hm_elig = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<int, shape_idx_hm_elig> idx_hm_elig;

    using shape_mortality = nda::shape<
    nda::dim<0, SS::hTS, 1>,
    nda::dim<0, SS::hDS, (SS::hTS)>,
    nda::dim<0, SS::hAG, (SS::hTS) * (SS::hDS)>,
    nda::dim<0, SS::NS, (SS::hTS) * (SS::hDS) * (SS::hAG)>
  >;
  nda::array<real_type, shape_mortality> mortality;

    using shape_mortality_time_rate_ratio = nda::shape<
    nda::dim<0, SS::hTS, 1>,
    nda::dim<0, nda::dynamic, (SS::hTS)>
  >;
  nda::array<real_type, shape_mortality_time_rate_ratio> mortality_time_rate_ratio;

    int dropout_recover_cd4;

    using shape_dropout_rate = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<real_type, shape_dropout_rate> dropout_rate;

    using shape_adults_on_art = nda::shape<
    nda::dim<0, SS::NS, 1>,
    nda::dim<0, nda::dynamic, (SS::NS)>
  >;
  nda::array<real_type, shape_adults_on_art> adults_on_art;

    using shape_adults_on_art_is_percent = nda::shape<
    nda::dim<0, SS::NS, 1>,
    nda::dim<0, nda::dynamic, (SS::NS)>
  >;
  nda::array<int, shape_adults_on_art_is_percent> adults_on_art_is_percent;

    real_type initiation_mortality_weight;

    using shape_h_art_stage_dur = nda::shape<
    nda::dim<0, SS::hTS - 1, 1>
  >;
  nda::array<real_type, shape_h_art_stage_dur> h_art_stage_dur;

  };

  static Pars parse_pars(
    const std::filesystem::path &params_file,
    const Options<real_type> &opts
  ) {
    return {
      .total_rate = read_data<real_type, typename Pars::shape_total_rate>(params_file, "incidinput", { nda::dim<>(0, opts.proj_steps, 1) }),
      .relative_risk_age = read_data<real_type, typename Pars::shape_relative_risk_age>(params_file, "incrr_age", { nda::dim<>(0, SS::pAG - SS::p_idx_hiv_first_adult, 1), nda::dim<>(0, SS::NS, (SS::pAG - SS::p_idx_hiv_first_adult)), nda::dim<>(0, opts.proj_steps, (SS::pAG - SS::p_idx_hiv_first_adult) * (SS::NS)) }),
      .relative_risk_sex = read_data<real_type, typename Pars::shape_relative_risk_sex>(params_file, "incrr_sex", { nda::dim<>(0, opts.proj_steps, 1) }),
      .cd4_mortality = read_data<real_type, typename Pars::shape_cd4_mortality>(params_file, "cd4_mort_full", { nda::dim<>(0, SS::hDS, 1), nda::dim<>(0, SS::hAG, (SS::hDS)), nda::dim<>(0, SS::NS, (SS::hDS) * (SS::hAG)) }),
      .cd4_progression = read_data<real_type, typename Pars::shape_cd4_progression>(params_file, "cd4_prog_full", { nda::dim<>(0, SS::hDS - 1, 1), nda::dim<>(0, SS::hAG, (SS::hDS - 1)), nda::dim<>(0, SS::NS, (SS::hDS - 1) * (SS::hAG)) }),
      .cd4_initial_distribution = read_data<real_type, typename Pars::shape_cd4_initial_distribution>(params_file, "cd4_initdist_full", { nda::dim<>(0, SS::hDS, 1), nda::dim<>(0, SS::hAG, (SS::hDS)), nda::dim<>(0, SS::NS, (SS::hDS) * (SS::hAG)) }),
      .scale_cd4_mortality = read_data_scalar<int>(params_file, "scale_cd4_mort"),
      .idx_hm_elig = read_data<int, typename Pars::shape_idx_hm_elig>(params_file, "artcd4elig_idx", { nda::dim<>(0, opts.proj_steps, 1) }),
      .mortality = read_data<real_type, typename Pars::shape_mortality>(params_file, "art_mort_full", { nda::dim<>(0, SS::hTS, 1), nda::dim<>(0, SS::hDS, (SS::hTS)), nda::dim<>(0, SS::hAG, (SS::hTS) * (SS::hDS)), nda::dim<>(0, SS::NS, (SS::hTS) * (SS::hDS) * (SS::hAG)) }),
      .mortality_time_rate_ratio = read_data<real_type, typename Pars::shape_mortality_time_rate_ratio>(params_file, "artmx_timerr", { nda::dim<>(0, SS::hTS, 1), nda::dim<>(0, opts.proj_steps, (SS::hTS)) }),
      .dropout_recover_cd4 = read_data_scalar<int>(params_file, "art_dropout_recover_cd4"),
      .dropout_rate = read_data<real_type, typename Pars::shape_dropout_rate>(params_file, "art_dropout_rate", { nda::dim<>(0, opts.proj_steps, 1) }),
      .adults_on_art = read_data<real_type, typename Pars::shape_adults_on_art>(params_file, "art15plus_num", { nda::dim<>(0, SS::NS, 1), nda::dim<>(0, opts.proj_steps, (SS::NS)) }),
      .adults_on_art_is_percent = read_data<int, typename Pars::shape_adults_on_art_is_percent>(params_file, "art15plus_isperc", { nda::dim<>(0, SS::NS, 1), nda::dim<>(0, opts.proj_steps, (SS::NS)) }),
      .initiation_mortality_weight = read_data_scalar<real_type>(params_file, "art_alloc_mxweight"),
      .h_art_stage_dur = read_data<real_type, typename Pars::shape_h_art_stage_dur>(params_file, "h_art_stage_dur", { nda::dim<>(0, SS::hTS - 1, 1) })
    };
  };
};

template<typename real_type, MV ModelVariant>
struct HcOwnedPars {
  using SS = SSMixed<ModelVariant>;
  
  struct Pars {
    using shape_hc_nosocomial = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<real_type, shape_hc_nosocomial> hc_nosocomial;

    using shape_hc1_cd4_dist = nda::shape<
    nda::dim<0, SS::hc1DS, 1>
  >;
  nda::array<real_type, shape_hc1_cd4_dist> hc1_cd4_dist;

    using shape_hc1_cd4_mort = nda::shape<
    nda::dim<0, SS::hc1DS, 1>,
    nda::dim<0, SS::hcTT, (SS::hc1DS)>,
    nda::dim<0, SS::hc1AG, (SS::hc1DS) * (SS::hcTT)>
  >;
  nda::array<real_type, shape_hc1_cd4_mort> hc1_cd4_mort;

    using shape_hc2_cd4_mort = nda::shape<
    nda::dim<0, SS::hc2DS, 1>,
    nda::dim<0, SS::hcTT, (SS::hc2DS)>,
    nda::dim<0, SS::hc2AG, (SS::hc2DS) * (SS::hcTT)>
  >;
  nda::array<real_type, shape_hc2_cd4_mort> hc2_cd4_mort;

    using shape_hc1_cd4_prog = nda::shape<
    nda::dim<0, SS::hc1DS, 1>,
    nda::dim<0, SS::hc1AG_c, (SS::hc1DS)>,
    nda::dim<0, SS::NS, (SS::hc1DS) * (SS::hc1AG_c)>
  >;
  nda::array<real_type, shape_hc1_cd4_prog> hc1_cd4_prog;

    using shape_hc2_cd4_prog = nda::shape<
    nda::dim<0, SS::hc2DS, 1>,
    nda::dim<0, SS::hc2AG_c, (SS::hc2DS)>,
    nda::dim<0, SS::NS, (SS::hc2DS) * (SS::hc2AG_c)>
  >;
  nda::array<real_type, shape_hc2_cd4_prog> hc2_cd4_prog;

    using shape_ctx_val = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<real_type, shape_ctx_val> ctx_val;

    using shape_hc_art_elig_age = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<int, shape_hc_art_elig_age> hc_art_elig_age;

    using shape_hc_art_elig_cd4 = nda::shape<
    nda::dim<0, SS::p_idx_hiv_first_adult, 1>,
    nda::dim<0, nda::dynamic, (SS::p_idx_hiv_first_adult)>
  >;
  nda::array<int, shape_hc_art_elig_cd4> hc_art_elig_cd4;

    using shape_hc_art_mort_rr = nda::shape<
    nda::dim<0, SS::hTS, 1>,
    nda::dim<0, SS::p_idx_hiv_first_adult, (SS::hTS)>,
    nda::dim<0, nda::dynamic, (SS::hTS) * (SS::p_idx_hiv_first_adult)>
  >;
  nda::array<real_type, shape_hc_art_mort_rr> hc_art_mort_rr;

    using shape_hc1_art_mort = nda::shape<
    nda::dim<0, SS::hc1DS, 1>,
    nda::dim<0, SS::hTS, (SS::hc1DS)>,
    nda::dim<0, SS::hc1AG, (SS::hc1DS) * (SS::hTS)>
  >;
  nda::array<real_type, shape_hc1_art_mort> hc1_art_mort;

    using shape_hc2_art_mort = nda::shape<
    nda::dim<0, SS::hc2DS, 1>,
    nda::dim<0, SS::hTS, (SS::hc2DS)>,
    nda::dim<0, SS::hc2AG, (SS::hc2DS) * (SS::hTS)>
  >;
  nda::array<real_type, shape_hc2_art_mort> hc2_art_mort;

    using shape_hc_art_isperc = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<int, shape_hc_art_isperc> hc_art_isperc;

    using shape_hc_art_val = nda::shape<
    nda::dim<0, SS::hcAG_coarse, 1>,
    nda::dim<0, nda::dynamic, (SS::hcAG_coarse)>
  >;
  nda::array<real_type, shape_hc_art_val> hc_art_val;

    using shape_hc_art_init_dist = nda::shape<
    nda::dim<0, SS::p_idx_hiv_first_adult, 1>,
    nda::dim<0, nda::dynamic, (SS::p_idx_hiv_first_adult)>
  >;
  nda::array<real_type, shape_hc_art_init_dist> hc_art_init_dist;

    using shape_fert_mult_by_age = nda::shape<
    nda::dim<0, SS::hAG_fert, 1>,
    nda::dim<0, nda::dynamic, (SS::hAG_fert)>
  >;
  nda::array<real_type, shape_fert_mult_by_age> fert_mult_by_age;

    using shape_fert_mult_off_art = nda::shape<
    nda::dim<0, SS::hDS, 1>
  >;
  nda::array<real_type, shape_fert_mult_off_art> fert_mult_off_art;

    using shape_fert_mult_on_art = nda::shape<
    nda::dim<0, SS::hAG_fert, 1>
  >;
  nda::array<real_type, shape_fert_mult_on_art> fert_mult_on_art;

    using shape_total_fertility_rate = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<real_type, shape_total_fertility_rate> total_fertility_rate;

    using shape_PMTCT = nda::shape<
    nda::dim<0, SS::hPS, 1>,
    nda::dim<0, nda::dynamic, (SS::hPS)>
  >;
  nda::array<real_type, shape_PMTCT> PMTCT;

    using shape_vertical_transmission_rate = nda::shape<
    nda::dim<0, SS::hDS + 1, 1>,
    nda::dim<0, SS::hVT, (SS::hDS + 1)>
  >;
  nda::array<real_type, shape_vertical_transmission_rate> vertical_transmission_rate;

    using shape_PMTCT_transmission_rate = nda::shape<
    nda::dim<0, SS::hDS, 1>,
    nda::dim<0, SS::hPS, (SS::hDS)>,
    nda::dim<0, SS::hVT, (SS::hDS) * (SS::hPS)>
  >;
  nda::array<real_type, shape_PMTCT_transmission_rate> PMTCT_transmission_rate;

    using shape_PMTCT_dropout = nda::shape<
    nda::dim<0, SS::hPS, 1>,
    nda::dim<0, SS::hVT_dropout, (SS::hPS)>,
    nda::dim<0, nda::dynamic, (SS::hPS) * (SS::hVT_dropout)>
  >;
  nda::array<real_type, shape_PMTCT_dropout> PMTCT_dropout;

    using shape_PMTCT_input_is_percent = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<int, shape_PMTCT_input_is_percent> PMTCT_input_is_percent;

    using shape_breastfeeding_duration_art = nda::shape<
    nda::dim<0, SS::hBF, 1>,
    nda::dim<0, nda::dynamic, (SS::hBF)>
  >;
  nda::array<real_type, shape_breastfeeding_duration_art> breastfeeding_duration_art;

    using shape_breastfeeding_duration_no_art = nda::shape<
    nda::dim<0, SS::hBF, 1>,
    nda::dim<0, nda::dynamic, (SS::hBF)>
  >;
  nda::array<real_type, shape_breastfeeding_duration_no_art> breastfeeding_duration_no_art;

    using shape_mat_hiv_births = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<real_type, shape_mat_hiv_births> mat_hiv_births;

    using shape_mat_prev_input = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<int, shape_mat_prev_input> mat_prev_input;

    using shape_prop_lt200 = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<real_type, shape_prop_lt200> prop_lt200;

    using shape_prop_gte350 = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<real_type, shape_prop_gte350> prop_gte350;

    using shape_ctx_val_is_percent = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<int, shape_ctx_val_is_percent> ctx_val_is_percent;

    using shape_hc_art_is_age_spec = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<int, shape_hc_art_is_age_spec> hc_art_is_age_spec;

    using shape_abortion = nda::shape<
    nda::dim<0, SS::hAB_ind, 1>,
    nda::dim<0, nda::dynamic, (SS::hAB_ind)>
  >;
  nda::array<real_type, shape_abortion> abortion;

    using shape_patients_reallocated = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<real_type, shape_patients_reallocated> patients_reallocated;

    using shape_hc_art_ltfu = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<real_type, shape_hc_art_ltfu> hc_art_ltfu;

    using shape_adult_female_infections = nda::shape<
    nda::dim<0, SS::p_fertility_age_groups, 1>,
    nda::dim<0, nda::dynamic, (SS::p_fertility_age_groups)>
  >;
  nda::array<real_type, shape_adult_female_infections> adult_female_infections;

    using shape_adult_female_hivnpop = nda::shape<
    nda::dim<0, SS::p_fertility_age_groups, 1>,
    nda::dim<0, nda::dynamic, (SS::p_fertility_age_groups)>
  >;
  nda::array<real_type, shape_adult_female_hivnpop> adult_female_hivnpop;

    using shape_total_births = nda::shape<
    nda::dim<0, nda::dynamic, 1>
  >;
  nda::array<real_type, shape_total_births> total_births;

    using shape_ctx_effect = nda::shape<
    nda::dim<0, 3, 1>
  >;
  nda::array<real_type, shape_ctx_effect> ctx_effect;

    int hc_art_start;

    real_type local_adj_factor;

  };

  static Pars parse_pars(
    const std::filesystem::path &params_file,
    const Options<real_type> &opts
  ) {
    return {
      .hc_nosocomial = read_data<real_type, typename Pars::shape_hc_nosocomial>(params_file, "paed_incid_input", { nda::dim<>(0, opts.proj_steps, 1) }),
      .hc1_cd4_dist = read_data<real_type, typename Pars::shape_hc1_cd4_dist>(params_file, "paed_cd4_dist", { nda::dim<>(0, SS::hc1DS, 1) }),
      .hc1_cd4_mort = read_data<real_type, typename Pars::shape_hc1_cd4_mort>(params_file, "paed_cd4_mort", { nda::dim<>(0, SS::hc1DS, 1), nda::dim<>(0, SS::hcTT, (SS::hc1DS)), nda::dim<>(0, SS::hc1AG, (SS::hc1DS) * (SS::hcTT)) }),
      .hc2_cd4_mort = read_data<real_type, typename Pars::shape_hc2_cd4_mort>(params_file, "adol_cd4_mort", { nda::dim<>(0, SS::hc2DS, 1), nda::dim<>(0, SS::hcTT, (SS::hc2DS)), nda::dim<>(0, SS::hc2AG, (SS::hc2DS) * (SS::hcTT)) }),
      .hc1_cd4_prog = read_data<real_type, typename Pars::shape_hc1_cd4_prog>(params_file, "paed_cd4_prog", { nda::dim<>(0, SS::hc1DS, 1), nda::dim<>(0, SS::hc1AG_c, (SS::hc1DS)), nda::dim<>(0, SS::NS, (SS::hc1DS) * (SS::hc1AG_c)) }),
      .hc2_cd4_prog = read_data<real_type, typename Pars::shape_hc2_cd4_prog>(params_file, "adol_cd4_prog", { nda::dim<>(0, SS::hc2DS, 1), nda::dim<>(0, SS::hc2AG_c, (SS::hc2DS)), nda::dim<>(0, SS::NS, (SS::hc2DS) * (SS::hc2AG_c)) }),
      .ctx_val = read_data<real_type, typename Pars::shape_ctx_val>(params_file, "ctx_val", { nda::dim<>(0, opts.proj_steps, 1) }),
      .hc_art_elig_age = read_data<int, typename Pars::shape_hc_art_elig_age>(params_file, "paed_art_elig_age", { nda::dim<>(0, opts.proj_steps, 1) }),
      .hc_art_elig_cd4 = read_data<int, typename Pars::shape_hc_art_elig_cd4>(params_file, "paed_art_elig_cd4", { nda::dim<>(0, SS::p_idx_hiv_first_adult, 1), nda::dim<>(0, opts.proj_steps, (SS::p_idx_hiv_first_adult)) }),
      .hc_art_mort_rr = read_data<real_type, typename Pars::shape_hc_art_mort_rr>(params_file, "mort_art_rr", { nda::dim<>(0, SS::hTS, 1), nda::dim<>(0, SS::p_idx_hiv_first_adult, (SS::hTS)), nda::dim<>(0, opts.proj_steps, (SS::hTS) * (SS::p_idx_hiv_first_adult)) }),
      .hc1_art_mort = read_data<real_type, typename Pars::shape_hc1_art_mort>(params_file, "paed_art_mort", { nda::dim<>(0, SS::hc1DS, 1), nda::dim<>(0, SS::hTS, (SS::hc1DS)), nda::dim<>(0, SS::hc1AG, (SS::hc1DS) * (SS::hTS)) }),
      .hc2_art_mort = read_data<real_type, typename Pars::shape_hc2_art_mort>(params_file, "adol_art_mort", { nda::dim<>(0, SS::hc2DS, 1), nda::dim<>(0, SS::hTS, (SS::hc2DS)), nda::dim<>(0, SS::hc2AG, (SS::hc2DS) * (SS::hTS)) }),
      .hc_art_isperc = read_data<int, typename Pars::shape_hc_art_isperc>(params_file, "artpaeds_isperc", { nda::dim<>(0, opts.proj_steps, 1) }),
      .hc_art_val = read_data<real_type, typename Pars::shape_hc_art_val>(params_file, "paed_art_val", { nda::dim<>(0, SS::hcAG_coarse, 1), nda::dim<>(0, opts.proj_steps, (SS::hcAG_coarse)) }),
      .hc_art_init_dist = read_data<real_type, typename Pars::shape_hc_art_init_dist>(params_file, "init_art_dist", { nda::dim<>(0, SS::p_idx_hiv_first_adult, 1), nda::dim<>(0, opts.proj_steps, (SS::p_idx_hiv_first_adult)) }),
      .fert_mult_by_age = read_data<real_type, typename Pars::shape_fert_mult_by_age>(params_file, "fert_rat", { nda::dim<>(0, SS::hAG_fert, 1), nda::dim<>(0, opts.proj_steps, (SS::hAG_fert)) }),
      .fert_mult_off_art = read_data<real_type, typename Pars::shape_fert_mult_off_art>(params_file, "cd4fert_rat", { nda::dim<>(0, SS::hDS, 1) }),
      .fert_mult_on_art = read_data<real_type, typename Pars::shape_fert_mult_on_art>(params_file, "frr_art6mos", { nda::dim<>(0, SS::hAG_fert, 1) }),
      .total_fertility_rate = read_data<real_type, typename Pars::shape_total_fertility_rate>(params_file, "tfr", { nda::dim<>(0, opts.proj_steps, 1) }),
      .PMTCT = read_data<real_type, typename Pars::shape_PMTCT>(params_file, "pmtct", { nda::dim<>(0, SS::hPS, 1), nda::dim<>(0, opts.proj_steps, (SS::hPS)) }),
      .vertical_transmission_rate = read_data<real_type, typename Pars::shape_vertical_transmission_rate>(params_file, "mtct", { nda::dim<>(0, SS::hDS + 1, 1), nda::dim<>(0, SS::hVT, (SS::hDS + 1)) }),
      .PMTCT_transmission_rate = read_data<real_type, typename Pars::shape_PMTCT_transmission_rate>(params_file, "pmtct_mtct", { nda::dim<>(0, SS::hDS, 1), nda::dim<>(0, SS::hPS, (SS::hDS)), nda::dim<>(0, SS::hVT, (SS::hDS) * (SS::hPS)) }),
      .PMTCT_dropout = read_data<real_type, typename Pars::shape_PMTCT_dropout>(params_file, "pmtct_dropout", { nda::dim<>(0, SS::hPS, 1), nda::dim<>(0, SS::hVT_dropout, (SS::hPS)), nda::dim<>(0, opts.proj_steps, (SS::hPS) * (SS::hVT_dropout)) }),
      .PMTCT_input_is_percent = read_data<int, typename Pars::shape_PMTCT_input_is_percent>(params_file, "pmtct_input_isperc", { nda::dim<>(0, opts.proj_steps, 1) }),
      .breastfeeding_duration_art = read_data<real_type, typename Pars::shape_breastfeeding_duration_art>(params_file, "bf_duration_art", { nda::dim<>(0, SS::hBF, 1), nda::dim<>(0, opts.proj_steps, (SS::hBF)) }),
      .breastfeeding_duration_no_art = read_data<real_type, typename Pars::shape_breastfeeding_duration_no_art>(params_file, "bf_duration_no_art", { nda::dim<>(0, SS::hBF, 1), nda::dim<>(0, opts.proj_steps, (SS::hBF)) }),
      .mat_hiv_births = read_data<real_type, typename Pars::shape_mat_hiv_births>(params_file, "mat_hiv_births", { nda::dim<>(0, opts.proj_steps, 1) }),
      .mat_prev_input = read_data<int, typename Pars::shape_mat_prev_input>(params_file, "mat_prev_input", { nda::dim<>(0, opts.proj_steps, 1) }),
      .prop_lt200 = read_data<real_type, typename Pars::shape_prop_lt200>(params_file, "prop_lt200", { nda::dim<>(0, opts.proj_steps, 1) }),
      .prop_gte350 = read_data<real_type, typename Pars::shape_prop_gte350>(params_file, "prop_gte350", { nda::dim<>(0, opts.proj_steps, 1) }),
      .ctx_val_is_percent = read_data<int, typename Pars::shape_ctx_val_is_percent>(params_file, "ctx_val_ispercent", { nda::dim<>(0, opts.proj_steps, 1) }),
      .hc_art_is_age_spec = read_data<int, typename Pars::shape_hc_art_is_age_spec>(params_file, "paed_art_age_spec", { nda::dim<>(0, opts.proj_steps, 1) }),
      .abortion = read_data<real_type, typename Pars::shape_abortion>(params_file, "abortion", { nda::dim<>(0, SS::hAB_ind, 1), nda::dim<>(0, opts.proj_steps, (SS::hAB_ind)) }),
      .patients_reallocated = read_data<real_type, typename Pars::shape_patients_reallocated>(params_file, "patients_reallocated", { nda::dim<>(0, opts.proj_steps, 1) }),
      .hc_art_ltfu = read_data<real_type, typename Pars::shape_hc_art_ltfu>(params_file, "paed_art_ltfu", { nda::dim<>(0, opts.proj_steps, 1) }),
      .adult_female_infections = read_data<real_type, typename Pars::shape_adult_female_infections>(params_file, "adult_female_infections", { nda::dim<>(0, SS::p_fertility_age_groups, 1), nda::dim<>(0, opts.proj_steps, (SS::p_fertility_age_groups)) }),
      .adult_female_hivnpop = read_data<real_type, typename Pars::shape_adult_female_hivnpop>(params_file, "hivnpop", { nda::dim<>(0, SS::p_fertility_age_groups, 1), nda::dim<>(0, opts.proj_steps, (SS::p_fertility_age_groups)) }),
      .total_births = read_data<real_type, typename Pars::shape_total_births>(params_file, "total_births", { nda::dim<>(0, opts.proj_steps, 1) }),
      .ctx_effect = read_data<real_type, typename Pars::shape_ctx_effect>(params_file, "ctx_effect", { nda::dim<>(0, 3, 1) }),
      .hc_art_start = read_data_scalar<int>(params_file, "hc_art_start"),
      .local_adj_factor = read_data_scalar<real_type>(params_file, "laf")
    };
  };
};


template<bool enable, typename Mixin>
struct Pair;

template<typename ...Ts>
struct OwnedParsMixer;

template<typename real_type, MV ModelVariant>
struct OwnedParsMixer<real_type, ModelVariant> {
  struct Pars {};

  static Pars parse_pars(
    const std::filesystem::path &params_file,
    const Options<real_type> &opts
  ) {
    Pars p = {}; return p;
  }
};

template<typename real_type, MV ModelVariant, typename Mixin, typename ...Ts>
struct OwnedParsMixer<real_type, ModelVariant, Pair<false, Mixin>, Ts...>: public OwnedParsMixer<real_type, ModelVariant, Ts...> {};

template<typename real_type, MV ModelVariant, typename ...Ts>
struct OwnedParsMixer<real_type, ModelVariant, Pair<true, DpOwnedPars<real_type, ModelVariant>>, Ts...>: public OwnedParsMixer<real_type, ModelVariant, Ts...> {
  using CurrOwnedPars = DpOwnedPars<real_type, ModelVariant>;
  using NextOwnedParsMixer = OwnedParsMixer<real_type, ModelVariant, Ts...>;

  struct Pars: public NextOwnedParsMixer::Pars {
    typename CurrOwnedPars::Pars dp;
  };

  static Pars parse_pars(
    const std::filesystem::path &params_file,
    const Options<real_type> &opts
  ) {
    Pars p = {
      NextOwnedParsMixer::parse_pars(params_file, opts),
      CurrOwnedPars::parse_pars(params_file, opts)
    };
    return p;
  };
};
template<typename real_type, MV ModelVariant, typename ...Ts>
struct OwnedParsMixer<real_type, ModelVariant, Pair<true, HaOwnedPars<real_type, ModelVariant>>, Ts...>: public OwnedParsMixer<real_type, ModelVariant, Ts...> {
  using CurrOwnedPars = HaOwnedPars<real_type, ModelVariant>;
  using NextOwnedParsMixer = OwnedParsMixer<real_type, ModelVariant, Ts...>;

  struct Pars: public NextOwnedParsMixer::Pars {
    typename CurrOwnedPars::Pars ha;
  };

  static Pars parse_pars(
    const std::filesystem::path &params_file,
    const Options<real_type> &opts
  ) {
    Pars p = {
      NextOwnedParsMixer::parse_pars(params_file, opts),
      CurrOwnedPars::parse_pars(params_file, opts)
    };
    return p;
  };
};
template<typename real_type, MV ModelVariant, typename ...Ts>
struct OwnedParsMixer<real_type, ModelVariant, Pair<true, HcOwnedPars<real_type, ModelVariant>>, Ts...>: public OwnedParsMixer<real_type, ModelVariant, Ts...> {
  using CurrOwnedPars = HcOwnedPars<real_type, ModelVariant>;
  using NextOwnedParsMixer = OwnedParsMixer<real_type, ModelVariant, Ts...>;

  struct Pars: public NextOwnedParsMixer::Pars {
    typename CurrOwnedPars::Pars hc;
  };

  static Pars parse_pars(
    const std::filesystem::path &params_file,
    const Options<real_type> &opts
  ) {
    Pars p = {
      NextOwnedParsMixer::parse_pars(params_file, opts),
      CurrOwnedPars::parse_pars(params_file, opts)
    };
    return p;
  };
};

template<typename real_type, MV ModelVariant>
using OwnedParsMixed = OwnedParsMixer<
  real_type,
  ModelVariant,
  Pair<ModelVariant::run_demographic_projection, DpOwnedPars<real_type, ModelVariant>>,
  Pair<ModelVariant::run_hiv_simulation, HaOwnedPars<real_type, ModelVariant>>,
  Pair<ModelVariant::run_child_model, HcOwnedPars<real_type, ModelVariant>>
>;

}
}

