{{header}}

#pragma once

#include <Rcpp.h>
#include <unsupported/Eigen/CXX11/Tensor>

#include "state_saver.hpp"
#include "r_utils.hpp"

template<typename ModelVariant, typename real_type>
Rcpp::List build_r_output(const typename leapfrog::StateSaver<ModelVariant, real_type>::OutputState &state,
                          const std::vector<int> save_steps) {
  size_t output_years = save_steps.size();
  constexpr auto ss = leapfrog::StateSpace<ModelVariant>();
{{default_data}}

{{build_list}}

{{optional_data}}

  return ret;
}
