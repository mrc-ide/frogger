{{header}}

#pragma once

#include <Rcpp.h>
#include <unsupported/Eigen/CXX11/Tensor>

#include "state_saver.hpp"

template<leapfrog::HivAgeStratification S, typename real_type>
Rcpp::List build_r_output(const typename leapfrog::StateSaver<S, real_type>::OutputState &state,
                          const std::vector<int> save_steps) {
  constexpr auto ss = leapfrog::StateSpace<S>();
  constexpr int num_genders = ss.num_genders;
  constexpr int age_groups_pop = ss.age_groups_pop;
  constexpr int age_groups_hiv = ss.age_groups_hiv;
  constexpr int disease_stages = ss.disease_stages;
  constexpr int treatment_stages = ss.treatment_stages;
  size_t output_years = save_steps.size();
{{initialise_r_memory}}

{{set_r_dimensions}}

{{copy_data}}

{{return_output}}
}
