{{header}}

#pragma once

#include <Rcpp.h>
#include <unsupported/Eigen/CXX11/Tensor>

#include "types.hpp"
#include "r_utils.hpp"

template<typename ModelVariant, typename real_type>
leapfrog::Parameters<ModelVariant, real_type> setup_model_params(const Rcpp::List &data,
                                                    const leapfrog::Options<real_type> &options,
                                                    const int proj_years) {
  constexpr auto ss = leapfrog::StateSpace<ModelVariant>();

{{default_data}}

  const leapfrog::Demography<real_type> demography = {
      base_pop,
      survival_probability,
      net_migration,
      age_specific_fertility_rate,
      births_sex_prop
  };

  const leapfrog::Incidence<real_type> incidence = {
      total_rate,
      age_rate_ratio,
      sex_rate_ratio
  };

  const leapfrog::NaturalHistory<real_type> natural_history = {
      cd4_mortality,
      cd4_progression,
      cd4_initial_distribution
  };

  const leapfrog::Art<real_type> art = {
      idx_hm_elig,
      mortality,
      mortaility_time_rate_ratio,
      h_art_stage_dur,
      dropout,
      adults_on_art,
      adults_on_art_is_percent
  };

<<<<<<< HEAD
  const leapfrog::Children<real_type> children = {
      hc_nosocomial,
      hc1_cd4_dist,
      hc_cd4_transition,
      hc1_cd4_mort,
      hc2_cd4_mort,
      hc1_cd4_prog,
      hc2_cd4_prog,
      ctx_effect,
      ctx_val,
      hc_art_elig_age,
      hc_art_elig_cd4,
      hc_art_mort_rr,
      hc1_art_mort,
      hc2_art_mort,
      hc_art_isperc,
      hc_art_val,
      hc_art_init_dist
  };
=======
  const leapfrog::BaseModelParameters<real_type> base_model_params = {
        options,
        demography,
        incidence,
        natural_history,
        art
    };
>>>>>>> mkw_hiv_mort

{{optional_data}}
}
