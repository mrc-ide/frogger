{{header}}

#pragma once

#include <Rcpp.h>
#include <unsupported/Eigen/CXX11/Tensor>

#include "types.hpp"
#include "r_utils.hpp"

template<leapfrog::HivAgeStratification S, typename real_type>
leapfrog::Parameters <real_type> setup_model_params(const Rcpp::List &data,
                                                    const leapfrog::Options<real_type> &options,
                                                    const int proj_years) {
  const int p_fertility_age_groups = options.p_fertility_age_groups;
  const int p_idx_hiv_first_adult = options.p_idx_hiv_first_adult;
  constexpr auto ss = leapfrog::StateSpace<S>();
{{unpack_state_space}}

{{parse_data}}

  const leapfrog::Demography<real_type> demography = {
      base_pop,
      survival_probability,
      net_migration,
      age_specific_fertility_rate,
      births_sex_prop
  };

  const leapfrog::Incidence<real_type> incidence = {
      total_rate,
      age_rate_ratio,
      sex_rate_ratio
  };

  const leapfrog::NaturalHistory<real_type> natural_history = {
      cd4_mortality,
      cd4_progression,
      cd4_initial_distribution
  };

  const leapfrog::Art<real_type> art = {
      idx_hm_elig,
      mortality,
      mortaility_time_rate_ratio,
      h_art_stage_dur,
      dropout,
      adults_on_art,
      adults_on_art_is_percent
  };

  const leapfrog::Parameters<real_type> params = {options,
                                                  demography,
                                                  incidence,
                                                  natural_history,
                                                  art};
  return params;
}
