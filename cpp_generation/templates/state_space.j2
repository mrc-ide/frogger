#pragma once

#include "concepts.hpp"

namespace leapfrog {

{% for config in configs %}
{% for ss in config.state_space %}

template<MV ModelVariant>
{{ get_template_specialisation(config.name, ss) }} {
  {% for name, val in ss.vars.items() %}
  static constexpr {{ get_member_type(val) }} {{ name }} = {{ get_member_value(val) }};
  {% endfor %}
};

{% endfor %}
{% endfor %}

struct BaseSS {
  {% for name, val in global_state_space.items() %}
  static constexpr {{ get_member_type(val) }} {{ name }} = {{ get_member_value(val) }};
  {% endfor %}
};

}
