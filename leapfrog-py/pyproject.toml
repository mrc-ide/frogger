[build-system]
requires = ["scikit-build-core", "pybind11"]
build-backend = "scikit_build_core.build"

[project]
name = "leapfrog-py"
version = "0.0.1"
description = ''
readme = "README.md"
requires-python = ">=3.8"
keywords = []
authors = [
  { name = "Rob Ashton", email = "robertashton94@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ["numpy"]

[project.urls]
Documentation = "https://github.com/mrc-ide/leapfrog#readme"
Issues = "https://github.com/mrc-ide/leapfrog/issues"
Source = "https://github.com/mrc-ide/leapfrog"

[tool.hatch.version]
path = "src/leapfrog_py/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/leapfrog_py tests}"

[tool.coverage.run]
source_pkgs = ["leapfrog_py", "tests"]
branch = true
parallel = true
omit = [
  "src/leapfrog_py/__about__.py",
]

[tool.coverage.paths]
leapfrog_py = ["src/leapfrog_py", "*/leapfrog-py/src/leapfrog_py"]
tests = ["tests", "*/leapfrog-py/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.hatch.envs.default]
python = "3.12"
version = "dev"
dependencies = [
  "pytest",
  "pytest_mock",
  "pytest-unordered",
  "pytest-cov"
]

[tool.hatch.envs.default.scripts]
install = "pip install -e ."
test = "pytest {args:tests}"
install_and_test = "hatch run install && hatch run test"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
testpaths = ["tests"]
